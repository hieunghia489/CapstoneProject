create database secureridehome;
use secureridehome;
create table Identity_Card(
identity_card_no nvarchar(12)  primary key,
full_name nvarchar(50) not null,
dob date not null,
gender int not null,
nationality nvarchar(30) not null,
place_of_origin nvarchar(255) not null,
place_if_residence  nvarchar(255) not null,
personal_identification nvarchar(255) not null,
expired_date date not null,
identity_card_status boolean default true
);

create table Identity_Card_Image(
identity_card_image_id int auto_increment primary key,
identity_card_no nvarchar(12), foreign key (identity_card_no) references Identity_Card(identity_card_no),
url nvarchar(255) not null,
is_front bool default true
);


create table Passenger(
	passenger_id int auto_increment primary key ,
    email nvarchar(100) not null unique,
    avatar_url nvarchar(100),
    fullname nvarchar(100) not null,
    dob Date not null,
    gender int,
    public_gender boolean,
    phone_number nvarchar(11) not null unique,
    flag bool default true,
    create_at datetime,
identity_card_no nvarchar(12), foreign key (identity_card_no) references Identity_Card(identity_card_no)
);
create table Passsenger_Location(
location_id int auto_increment primary key,
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
address nvarchar(255)
);
create table Role(
role_id int auto_increment primary key,
role_name nvarchar(50) not null
);

create table Manager(
manager_id int auto_increment primary key,
email nvarchar(100) not null unique,
avatar_url nvarchar(255),
fullname nvarchar(100) not null,
phone_number nvarchar(10) not null,
create_at datetime,
role_id int not null, foreign key (role_id) references Role(role_id)
);

create table Notification_Type(
notification_type_id int auto_increment primary key,
notification_type_name nvarchar(100) not null
);

create table Manager_Notification(
notification_id int auto_increment primary key,
manager_id int not null, foreign key (manager_id) references Manager(manager_id),
notification_content nvarchar(255) not null,
notification_title nvarchar(255) not null,
notification_type_id int not null, foreign key (notification_type_id) references Notification_Type(notification_type_id),
is_read boolean default 0,
create_at datetime
);

create table Report_Type(
report_type_id int auto_increment primary key,
report_name nvarchar(30)not null,
description nvarchar(255) not null
);
create table Passenger_Support(
passenger_support_id int auto_increment primary key,
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
report_description nvarchar(255) not null,
create_at datetime,
report_type_id int not null,foreign key (report_type_id) references Report_Type(report_type_id),
 manager_id int , foreign key (manager_id) references Manager(manager_id),
 is_handled boolean default 0
);

create table Passenger_Notification(
notification_id int auto_increment primary key,
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
notification_content nvarchar(255) not null,
notification_title nvarchar(255) not null,
notification_type_id int not null, foreign key (notification_type_id) references Notification_Type(notification_type_id),
is_read boolean default 0,
create_at datetime
);

create table Vehicle_Type(
vehicle_type_id int auto_increment primary key,
description nvarchar(255) not null,
seat int not null,
license_request nvarchar (10) not null,
image nvarchar(255)
);

create table Vehicle(
vehicle_license_plate nvarchar(12) primary key,
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
 vehicle_type_id int not null, foreign key (vehicle_type_id) references Vehicle_Type(vehicle_type_id),
 model nvarchar(50)
);

create table Vehicle_Image_Type(
vehicle_image_type_id int auto_increment primary key,
vehicle_type_name nvarchar(100)not null
);

create table Vehicle_Image(
vehicle_image_id int auto_increment primary key,
vehicle_license_plate nvarchar(12), foreign key (vehicle_license_plate) references Vehicle(vehicle_license_plate),
url nvarchar(255),
vehicle_image_type_id int, foreign key (vehicle_image_type_id) references vehicle_image_type(vehicle_image_type_id)
);

create table Driver(
driver_id int auto_increment primary key,
email nvarchar(100) not null unique,
    avatar_url nvarchar(100),
    fullname nvarchar(100) not null,
    dob Date not null,
    gender int,
    public_gender boolean,
    address nvarchar(255),
    phone_number nvarchar(11) not null unique,
    rating float,
    flag bool default true,
    create_at datetime,
identity_card_no nvarchar(12), foreign key (identity_card_no) references Identity_Card(identity_card_no),
prioritize int,
create_by int not null, foreign key (create_by) references Manager(manager_id),
is_booked boolean,
is_active boolean
);
create table Driving_License(
driving_lic_no int auto_increment primary key,
driver_id int, foreign key (driver_id) references Driver(driver_id),
lecense_class nvarchar(10) not null,
expired_date date,
driving_lic_status boolean default 1
);booking

create table Driving_License_Image(
driving_lic_image_id int auto_increment primary key,
driving_lic_no int,foreign key (driving_lic_no) references Driving_License(driving_lic_no),
is_front boolean,
url nvarchar(255)
);

create table Driver_Location(
location_id int auto_increment primary key,
driver_id int, foreign key (driver_id) references Driver(driver_id),
address nvarchar(255),
create_at datetime
);
create table Driver_Support(
driver_support_id int auto_increment primary key,
driver_id int, foreign key (driver_id) references Driver(driver_id),
report_description nvarchar(255) not null,
create_at datetime,
report_type_id int not null,foreign key (report_type_id) references Report_Type(report_type_id),
 manager_id int , foreign key (manager_id) references Manager(manager_id),
 is_handled boolean default 0
);
create table Passenger_Notification(
notification_id int auto_increment primary key,
driver_id int, foreign key (driver_id) references Driver(driver_id),
notification_content nvarchar(255) not null,
notification_title nvarchar(255) not null,
notification_type_id int not null, foreign key (notification_type_id) references Notification_Type(notification_type_id),
is_read boolean default 0,
create_at datetime
);
create table Booking(
booking_id int auto_increment primary key,
driver_id int, foreign key (driver_id) references Driver(driver_id),
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
service_type enum("Yourself","For some one"),
 vehicle_type_id int not null, foreign key (vehicle_type_id) references Vehicle_Type(vehicle_type_id),
vehicle_license_plate nvarchar(12) not null,
is_paid boolean default 0,
pick_up_location nvarchar(255) not null,
drop_off_location nvarchar(255) not null,
pick_up_time datetime,
drop_off_time datetime,
total_price long,
note nvarchar(255),
current_status nvarchar(30)
);

create table Image_Type(
image_type_id int auto_increment primary key,
image_type_name nvarchar(50) not null
);

create table Booking_Image(
booking_image_id int auto_increment primary key,
image_type_id int,foreign key (image_type_id) references Image_Type(image_type_id),
url nvarchar(255),
booking_id int not null, foreign key (booking_id) references Booking(booking_id)
);

create table Booking_Progress(
booking_progress_id int auto_increment primary key,
booking_id int not null, foreign key (booking_id) references Booking(booking_id),
booking_step nvarchar(50),
create_at datetime
);

create table Booking_Summary(
summary_id int auto_increment primary key,
booking_id int not null, foreign key (booking_id) references Booking(booking_id),
final_drop_off_location nvarchar(255),
final_drop_off_time datetime,
final_price long
);

create table Payment(
payment_id int auto_increment primary key,
payment_method enum ("Cash","Bank"),
payment_content nvarchar(255),
create_at datetime
);

create table Transaction(
transaction_id int auto_increment primary key,
booking_id int not null, foreign key (booking_id) references Booking(booking_id),
transaction_date datetime,
total_payment long
);

create table Feedback(
feedback_id int auto_increment primary key,
booking_id int not null, foreign key (booking_id) references Booking(booking_id),
driver_id int, foreign key (driver_id) references Driver(driver_id),
content nvarchar(255)
);

create table Rating(
rating_it int auto_increment primary key,
booking_id int not null, foreign key (booking_id) references Booking(booking_id),
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
content nvarchar(255),
rate int
);
create table Complaint(
complaint_id int auto_increment primary key,
booking_id int not null, foreign key (booking_id) references Booking(booking_id),
passenger_id int not null, foreign key (passenger_id) references passenger(passenger_id),
manager_id int, foreign key (manager_id) references Manager(manager_id),
description nvarchar(255),
is_reply boolean default 0,
created_at datetime
);